Helpful tools and command-line fu for working with the database dump.
Spence Green // 11 July 2012

Make sure that .pgpass is properly configured in the user's root directory.

Loading a dump:

 psql -h localhost djangodb django < mydb.dump

Dumping the database to CSV:

 ./run_sql_script.sh localhost djangodb postgres sql/dumpdb.sql

POSTGRESQL commands

List all tables:

 SELECT * from information_schema.tables

List all users:

 SELECT id,username FROM auth_user ORDER BY id 

To generate user_data.csv, which is needed for working with the linear models:

 
 
==========
Procedure for creating the linear modeling data:

 1) Download the dump from ptm and load it on the local db host
 2) Execute: SCRIPTS/sql/dumpdb.sql as 'postgres' superuser
 3) Execute: SCRIPTS/wrangle/proc_dbdump.py
 4) Create a translation frame with SCRIPTS/wrangle/make_translation_frame.py
 5) Be sure to update the user frame with SCRIPTS/wrangle/make_user_frame.py if any users were added in the new data. The script needs the output from the following two SQL commands:
 
    SELECT id,username FROM auth_user ORDER BY id
 
    SELECT user_id,birth_country_id,home_country_id,hours_per_week,is_pro_translator FROM tm_userconf ORDER BY user_id
 
 6) Run the appropriate language-specific R modeling script.
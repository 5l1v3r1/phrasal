<project name="mt" default="compile" basedir=".">
  <property name="project.core"   value="${basedir}/../core" />
  <property name="project.more"   value="${basedir}/../more" />
  <property name="project.rte"   value="${basedir}/../rte" />
  <property name="build.path"     value="${basedir}/classes" />
  <property name="source.path"    value="${basedir}/src" />
  <property name="source-research.path"    value="${basedir}/src-research" />
  <property name="tests.path"     value="${basedir}/test/src" />
  <property name="itests.path"     value="${basedir}/itest/src" />
  
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
  <property name="compile.source"      value="1.7" />
  <property name="compile.target"      value="1.7" />
  <property name="compile.encoding"    value="utf-8" />

  <property environment="env"/>
 
  <target name="classpath" description="Sets the classpath">
    <echo message="${ant.project.name}" />
    <path id="classpath">
      <!-- depends on core -->
      <fileset dir="${project.core}/lib">
        <include name="*.jar"/>
        <exclude name="javanlp*"/>
      </fileset>
      <pathelement path="${project.core}/classes" />
	  
	  <!-- depends on more -->
      <fileset dir="${project.more}/lib">
        <include name="*.jar"/>
        <exclude name="javanlp*"/>
      </fileset>
      <pathelement path="${project.more}/classes" />

      <!-- for the time being let rte depend on rte -->
      <fileset dir="${project.rte}/lib">
        <include name="*.jar"/>
        <exclude name="javanlp*"/>
      </fileset>
      <pathelement path="${project.rte}/classes" />
      
      <!-- depends on local libs -->
      <fileset dir="${basedir}/lib">
        <include name="*.jar"/>
        <exclude name="javanlp*"/>
      </fileset>
      <fileset dir="${basedir}/lib-research">
        <include name="*.jar"/>
        <exclude name="javanlp*"/>
      </fileset>
    </path>
  </target>
  
  <target name="clean" description="Delete old classes">
    <echo message="${ant.project.name}" />
    <delete dir="${build.path}"/>
  </target>

  <target name="compile" depends="classpath"
          description="Compile core sources">
    <echo message="${ant.project.name}" />
    <mkdir    dir="${build.path}" />
    <javac srcdir="${source.path}:${source-research.path}:${tests.path}:${itests.path}"
          destdir="${build.path}"
            debug="${compile.debug}"
         encoding="${compile.encoding}"   
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}"
           fork="true"
           memorymaximumsize="2g"
includeantruntime="false">
        <classpath refid="classpath" />
      <!-- <compilerarg value="-Xmaxerrs"/>
           <compilerarg value="20"/> -->
      <!-- <compilerarg value="-Xlint"/> -->
    </javac>
    <!-- Copy application resources -->
    <copy  todir="${build.path}">
      <fileset dir="${source.path}" excludes="**/*.java"/>
    </copy>
    <copy  todir="${build.path}">
      <fileset dir="${source-research.path}" excludes="**/*.java"/>
    </copy>
  </target>
 
  <target name="test" depends="classpath,compile"
          description="Run mt unit tests">
    <echo message="${ant.project.name}" />
    <junit fork="true" maxmemory="4g" printsummary="off" outputtoformatters="false" forkmode="perBatch" haltonfailure="true">
      <sysproperty key="java.library.path" path="${basedir}/src-cc"/>
      <classpath refid="classpath"/>
      <classpath path="${build.path}"/>
      <formatter type="brief" usefile="false"/>
      <batchtest fork="yes">
        <fileset dir="${tests.path}">
          <include name="**/*Test.java"/>
          <exclude name="**/*ITest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
  
  <target name="itest" depends="classpath,compile"
          description="Run mt integration tests">
    <echo message="${ant.project.name}" />
    <junit fork="true" maxmemory="2g" printsummary="off" outputtoformatters="false" forkmode="perBatch" haltonfailure="true">
      <sysproperty key="java.library.path" path="${basedir}/src-cc"/>
      <classpath refid="classpath"/>
      <classpath path="${build.path}"/>
      <formatter type="brief" usefile="false"/>
      <batchtest fork="yes">
        <fileset dir="${itests.path}">
          <include name="**/*ITest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="compile-all" depends="compile"
          description="Compile everything" />

  <target name="all" depends="clean,compile-all"
          description="Clean and re-compile." />
  
  <!-- Thang Aug13 -->
  <target name="jar" depends="compile">
    <jar destfile="javanlp-mt.jar">
      <fileset dir="./classes" />
    </jar>
  </target>
</project>
